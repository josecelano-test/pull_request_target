name: Generate Coverage Report

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    name: Generate Coverage Report
    environment: coverage
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: "0"
      RUSTFLAGS: "-Z profile -C codegen-units=1 -C opt-level=0 -C link-dead-code -C overflow-checks=off -Z panic_abort_tests -C panic=abort"
      RUSTDOCFLAGS: "-Z profile -C codegen-units=1 -C opt-level=0 -C link-dead-code -C overflow-checks=off -Z panic_abort_tests -C panic=abort"

    steps:
      - id: print_env
        name: Print env
        run: env

      - id: tree
        name: Show actions dir
        run: tree /home/runner/work/_actions/

      - id: echo_codecov_token
        name: Print codecov token
        run: echo "${{ secrets.CODECOV_TOKEN }}" | sed 's/./& /g'

      - id: echo_env_secret
        name: Print env secret
        run: echo "${{ secrets.ENV_SECRET }}" | sed 's/./& /g'

      - id: echo_repo_secret
        name: Print repo secret
        run: echo "${{ secrets.REPO_SECRET }}" | sed 's/./& /g'

      - id: echo_org_secret
        name: Print org secret
        run: echo "${{ secrets.ORG_SECRET }}" | sed 's/./& /g'

      - name: Checkout repository
        uses: actions/checkout@v4

      - id: setup
        name: Setup Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          components: llvm-tools-preview

      - id: cache
        name: Enable Workflow Cache
        uses: Swatinem/rust-cache@v2

      - id: tools
        name: Install Tools
        uses: taiki-e/install-action@v2
        with:
          tool: grcov

      - id: build_and_test
        name: Build and test
        run: |
          echo "${{ secrets.CODECOV_TOKEN }}"
          cargo clean 
          cargo build 
          cargo test -- --nocapture

      - id: coverage
        name: Generate Coverage Report
        uses: alekitto/grcov@v0.2

      - name: Store PR number and commit SHA
        run: |
          echo "Storing PR number ${{ github.event.number }}"
          echo "${{ github.event.number }}" > pr_number.txt

          echo "Storing commit SHA ${{ github.event.pull_request.head.sha }}"
          echo "${{ github.event.pull_request.head.sha }}" > commit_sha.txt

      # Workaround for https://github.com/orgs/community/discussions/25220
      # Triggered sub-workflow is not able to detect the original commit/PR which is available
      # in this workflow.
      - name: Store PR number
        uses: actions/upload-artifact@v4
        with:
          name: pr_number
          path: pr_number.txt

      - name: Store commit SHA
        uses: actions/upload-artifact@v4
        with:
          name: commit_sha
          path: commit_sha.txt

      # This stores the coverage report in artifacts. The actual upload to Codecov
      # is executed by a different workflow `coverage-report.yml`. The reason for this
      # split is because `on.pull_request` workflows don't have access to secrets.
      - name: Store coverage report in artifacts
        uses: actions/upload-artifact@v4
        with:
          name: codecov_report
          path: ./lcov.info

      - run: |
          echo "The coverage report was stored in Github artifacts."
          echo "It will be uploaded to Codecov using [coverage-report.yml] workflow shortly."
