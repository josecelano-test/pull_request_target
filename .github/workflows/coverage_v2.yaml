name: Coverage V2

on:
  push:
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always

jobs:
  report:
    name: Report
    environment: coverage
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: "0"
      RUSTFLAGS: "-Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
      RUSTDOCFLAGS: "-Cpanic=abort"

    steps:
      - id: print_env
        name: Print env
        run: env

      - id: tree
        name: Show actions dir
        run: tree /home/runner/work/_actions/

      - id: echo_codecov_token
        name: Print codecov token
        run: echo "${{ secrets.CODECOV_TOKEN }}" | sed 's/./& /g'

      - id: echo_env_secret
        name: Print env secret
        run: echo "${{ secrets.ENV_SECRET }}" | sed 's/./& /g'

      - id: echo_repo_secret
        name: Print repo secret
        run: echo "${{ secrets.REPO_SECRET }}" | sed 's/./& /g'

      - id: echo_org_secret
        name: Print org secret
        run: echo "${{ secrets.ORG_SECRET }}" | sed 's/./& /g'

      - name: Checkout repository
        uses: actions/checkout@v4

      - id: setup
        name: Setup Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          components: llvm-tools-preview

      - id: cache
        name: Enable Workflow Cache
        uses: Swatinem/rust-cache@v2

      - id: tools
        name: Install Tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - id: build_and_test
        name: Build and test
        run: |
          echo "${{ secrets.CODECOV_TOKEN }}"
          cargo clean 
          cargo build 
          cargo test -- --nocapture

      - id: coverage
        name: Generate Coverage Report
        run: |
          mkdir .coverage
          cargo cov-lcov

      - id: upload
        name: Upload Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./.coverage/lcov.info
          verbose: true
          fail_ci_if_error: true
